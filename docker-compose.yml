version: '3.8'

services:
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=billing_system
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=billing_system
      - SECRET_KEY=your-secret-key-here-change-in-production
      - WEBHOOK_SECRET=your-webhook-secret-change-in-production
      - CORS_ORIGINS=["http://localhost:3000", "http://localhost:80", "http://frontend"]
      - ENVIRONMENT=development
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
      - "80:80"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_MOCK_API=false
    depends_on:
      - backend

volumes:
  postgres_data: